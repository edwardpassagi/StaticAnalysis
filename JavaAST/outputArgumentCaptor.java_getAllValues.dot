digraph "DirectedGraph" {
graph [label = "getAllValues", labelloc=t, concentrate = true];
"630074945" [ label="(/**  * Returns all captured values. Use it when capturing varargs or when the verified method was called multiple times. When varargs method was called multiple times, this method returns merged list of all values from all invocations. <p> Example: <pre class=\"code\"><code class=\"java\"> mock.doSomething(new Person(\"John\"); mock.doSomething(new Person(\"Jane\"); ArgumentCaptor&lt;Person&gt; peopleCaptor = ArgumentCaptor.forClass(Person.class); verify(mock, times(2)).doSomething(peopleCaptor.capture()); List&lt;Person&gt; capturedPeople = peopleCaptor.getAllValues(); assertEquals(\"John\", capturedPeople.get(0).getName()); assertEquals(\"Jane\", capturedPeople.get(1).getName()); </pre> Example of capturing varargs: <pre class=\"code\"><code class=\"java\"> mock.countPeople(new Person(\"John\"), new Person(\"Jane\"); //vararg method ArgumentCaptor&lt;Person&gt; peopleCaptor = ArgumentCaptor.forClass(Person.class); verify(mock).countPeople(peopleCaptor.capture()); List expected = asList(new Person(\"John\"), new Person(\"Jane\")); assertEquals(expected, peopleCaptor.getAllValues()); </code></pre> See more examples in javadoc for {@link ArgumentCaptor} class. * @return captured argument value */ public List<T> getAllValues(){  return this.capturingMatcher.getAllValues(); } ,MethodDeclaration,100,134)" type=31 startLineNumber=100 endLineNumber=134 ]
"64133603" [ label="(/**  * Returns all captured values. Use it when capturing varargs or when the verified method was called multiple times. When varargs method was called multiple times, this method returns merged list of all values from all invocations. <p> Example: <pre class=\"code\"><code class=\"java\"> mock.doSomething(new Person(\"John\"); mock.doSomething(new Person(\"Jane\"); ArgumentCaptor&lt;Person&gt; peopleCaptor = ArgumentCaptor.forClass(Person.class); verify(mock, times(2)).doSomething(peopleCaptor.capture()); List&lt;Person&gt; capturedPeople = peopleCaptor.getAllValues(); assertEquals(\"John\", capturedPeople.get(0).getName()); assertEquals(\"Jane\", capturedPeople.get(1).getName()); </pre> Example of capturing varargs: <pre class=\"code\"><code class=\"java\"> mock.countPeople(new Person(\"John\"), new Person(\"Jane\"); //vararg method ArgumentCaptor&lt;Person&gt; peopleCaptor = ArgumentCaptor.forClass(Person.class); verify(mock).countPeople(peopleCaptor.capture()); List expected = asList(new Person(\"John\"), new Person(\"Jane\")); assertEquals(expected, peopleCaptor.getAllValues()); </code></pre> See more examples in javadoc for {@link ArgumentCaptor} class. * @return captured argument value */ ,Javadoc,100,131)" type=29 startLineNumber=100 endLineNumber=131 ]
"1436901839" [ label="(public,Modifier,132,132)" type=83 startLineNumber=132 endLineNumber=132 ]
"999522307" [ label="(List<T>,ParameterizedType,132,132)" type=74 startLineNumber=132 endLineNumber=132 ]
"1866161430" [ label="(List,SimpleType,132,132)" type=43 startLineNumber=132 endLineNumber=132 ]
"2024918163" [ label="(List,SimpleName,132,132)" type=42 startLineNumber=132 endLineNumber=132 ]
"107241811" [ label="(T,SimpleType,132,132)" type=43 startLineNumber=132 endLineNumber=132 ]
"558922244" [ label="(T,SimpleName,132,132)" type=42 startLineNumber=132 endLineNumber=132 ]
"339099861" [ label="(getAllValues,SimpleName,132,132)" type=42 startLineNumber=132 endLineNumber=132 ]
"1653986196" [ label="({  return this.capturingMatcher.getAllValues(); } ,Block,132,134)" type=8 startLineNumber=132 endLineNumber=134 ]
"1197365356" [ label="(return this.capturingMatcher.getAllValues(); ,ReturnStatement,133,133)" type=41 startLineNumber=133 endLineNumber=133 ]
"1702660825" [ label="(this.capturingMatcher.getAllValues(),MethodInvocation,133,133)" type=32 startLineNumber=133 endLineNumber=133 ]
"1131040331" [ label="(this.capturingMatcher,FieldAccess,133,133)" type=22 startLineNumber=133 endLineNumber=133 ]
"254749889" [ label="(this,ThisExpression,133,133)" type=52 startLineNumber=133 endLineNumber=133 ]
"973576304" [ label="(capturingMatcher,SimpleName,133,133)" type=42 startLineNumber=133 endLineNumber=133 ]
"992802731" [ label="(getAllValues,SimpleName,133,133)" type=42 startLineNumber=133 endLineNumber=133 ]
"630074945" -> "64133603"
"630074945" -> "1436901839"
"630074945" -> "999522307"
"999522307" -> "1866161430"
"1866161430" -> "2024918163"
"999522307" -> "107241811"
"107241811" -> "558922244"
"630074945" -> "339099861"
"630074945" -> "1653986196"
"1653986196" -> "1197365356"
"1197365356" -> "1702660825"
"1702660825" -> "1131040331"
"1131040331" -> "254749889"
"1131040331" -> "973576304"
"1702660825" -> "992802731"
}
